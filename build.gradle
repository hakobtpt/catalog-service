plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
}


group = 'com.polarbookshop'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

bootRun {
    systemProperty 'spring.profiles.active', 'testdata'
}

ext {
    set('springCloudVersion', "2022.0.3")
    set('testcontainersVersion', "1.17.3")
    //	set('snakeyaml.version','2.0')
}

dependencies {
//region implementation
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.flywaydb:flyway-core'
    //	implementation group: 'org.yaml', name: 'snakeyaml', version: '2.0'

//endregion implementation

//region runtimeOnly
    runtimeOnly 'org.postgresql:postgresql'
//endregion runtimeOnly

//region compileOnly
    compileOnly 'org.projectlombok:lombok'
//endregion compileOnly

//region annotationProcessor
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
//endregion annotationProcessor

//region testImplementation
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
//endregion testImplementation
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

// The Spring Boot Plugin task to build an OCI image using Buildpacks
bootBuildImage {
// The name of the OCI image to build. The name is the same one defined in the Gradle configuration
// for the project. We rely on the implicit “latest” tag when working locally rather than a version number
    imageName = "${project.name}"
//The JVM version to be installed in the image. It uses the latest Java 17 version.
    environment = ["BP_JVM_VERSION" : "17.*"]

    docker {
        publishRegistry {
            username = project.findProperty("registryUsername")
            password = project.findProperty("registryToken")
            url = project.findProperty("registryUrl")
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
